"""
lsof -P | grep ':8000' | awk '{print $2}' | xargs kill -9
python manage.py runserver ttgbk-pp-hadp-3.ttgtpmg.net:8000

meta
models.py
project_create.html
project_update.html
forms.py
navbar.html


Env settings:

from_email
env


ps -ef|/appdata/middleware/sqlserver_migration/scripts/sqoop_sql_server_generic.sh
to new one /appdata/middleware/sqlserver_migration/scripts/sqoop_sql_server_generic.sh

for 3 hour mail migrate view.py from meta pre prod to prod
scripts util.py it has steps to handle the job failure

ssh K390239@ttgbk-pp-hadp-3.ttgtpmg.net
ssh K390239@ttgbk-pr-hadp-8.ttgtpmg.net
sudo su - svc_mwadmin
sudo su -

install psutil in prod
pip install psutil


file count

find . -maxdepth 50 -type d -print0 | xargs -0 -I {} sh -c 'echo -e $(find "{}" -printf "\n" | wc -l) "{}"' | sort -n

#cmd + shift + p "Flake"
vulture /Users/arjunkumar/Desktop/notes2/pre-prod/front_end/PyDataFlow_Local/PyDataFlow/pydataflow/logs/2019-09-11/hello.py
flake8 hello.py

/Users/arjunkumar/anaconda5.2/anaconda3/lib/python3.6/site-packages/lint.py
https://stackoverflow.com/questions/49016255/django-display-contents-of-txt-file-on-the-website
http://127.0.0.1:8000/jobflowdetail/29/
http://127.0.0.1:8000/exe_jobflow/17/29/ # to execute job stream (project_id, jobflow_id)

http://127.0.0.1:8000/execute_single_jobs_generic/29/69/   # to execute single job| (jobflow_id, jobflowdetail_id):


ps -ef|grep sqoop_sql_server_generic_etl_mgmt.sh| awk '{print $2}'| xargs kill -9

http://127.0.0.1:8000/execute_jobs/29/69/   depricated

to unlock sqlite db
fuser db.sqlite3
lsof -P | grep ':8000' | awk '{print $2}' | xargs kill -9
ps -ef|grep tmp.py| awk '{print $2}'|xargs kill -9
sudo brew services restart mysql
sudo /usr/local/mysql/support-files/mysql.server start
sudo brew services stop mysql



mysqldump --no-data --skip-comments --host=your_database_hostname_or_ip.com -u your_username --password=your_password your_database_name penguins > penguins.sql
mysqldump --no-data --skip-comments --host=127.0.0.1 -u sqoopuser --password=MyNewPass1@ barterdev > penguins.sql



Django settings for pydataflow project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'cdh@g_j#@ursvpe(=!rhk=7$bd1h8@6*6t^-udwfp0ktyv!u_7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['10.236.216.154', 'ttgbk-pp-hadp-3.ttgtpmg.net', '127.0.0.1', 'ttgbk-pr-hadp-8.ttgtpmg.net','10.236.211.34']


#double check and delete it if its not required.
#During development only
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


EMAIL_FILE_PATH = os.path.join(BASE_DIR, "templates/sent_emails")

# Application definition

INSTALLED_APPS = [
    'common',
    'meta',
    'sch',
    'logview',

    ## 'logview2',
    ## 'tutorial',

    'books',
    'book_meta',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_extensions',
    'multiselectfield',
    'import_export',
    # 'django_tables2',
    # 'table',
    'rest_framework',
    #'django_filters',
    'django_forms_bootstrap',
    'widget_tweaks',


]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

)

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_datatables.renderers.DatatablesRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_datatables.filters.DatatablesFilterBackend',
        #newly added filter
        #'django_filters.rest_framework.DjangoFilterBackend',

    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
    'PAGE_SIZE': 50,
}




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]





ROOT_URLCONF = 'pydataflow.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pydataflow.wsgi.application'

IMPORT_EXPORT_USE_TRANSACTIONS = True

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'etl_control',
#         'USER': 'azkban',
#         'PASSWORD': 'BigData1@',
#         'HOST': 'localhost',
#         'PORT': '3306',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'America/Los_Angeles'


USE_I18N = True

USE_L10N = True


USE_TZ = True


##Date Time format:
# DATETIME_FORMAT="%Y-%m-%d%H:%M:%S"



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


if DEBUG:
    MEDIA_URL = '/media/'
    STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static", "static-only")
    MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static", "media")
    STATICFILES_DIRS = (
        os.path.join(os.path.dirname(BASE_DIR), "static", "static"),
    )




# CRISPY_TEMPLATE_PACK = 'bootstrap3'
CRISPY_TEMPLATE_PACK = 'bootstrap4'

SITE_ID = 1

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/meta/index/'
# LOGIN_REDIRECT_URL = '/'
# LOGIN_REDIRECT_URL = '/accounts/login/'
LOGOUT_REDIRECT_URL = '/accounts/login/'



ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_CONFIRM_EMAIL_ON_GET = False
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_URL = LOGIN_URL
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = None


ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 14
ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_EMAIL_VERIFICATION = None
ACCOUNT_EMAIL_SUBJECT_PREFIX = "My Access Details"
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"

ACCOUNT_LOGOUT_ON_GET = False
# ACCOUNT_LOGOUT_REDIRECT_URL = "/"
ACCOUNT_LOGOUT_REDIRECT_URL = "/accounts/login/"
ACCOUNT_SIGNUP_FORM_CLASS = None
ACCOUNT_SIGNUP_PASSWORD_VERIFICATION = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = "username"
ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"

ACCOUNT_USERNAME_MIN_LENGHT = 5
ACCOUNT_USERNAME_BLOCKLIST = []
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = False
ACCOUNT_PASSWORD_MIN_LENGTH = 6
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True


# SERVER_NAME = 'PROD'
# CLUSTER_NAME = 'Env: Prod'
SERVER_NAME = 'Pre-PROD'
CLUSTER_NAME = 'Env: Pre-Prod'

#from_email = 'etl_management@kp.org'
FROM_EMAIL = 'etl_management@kp.org'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'pydataflow.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
